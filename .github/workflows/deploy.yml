name: Airline Booking Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies and build
        run: |
          cd Frontend
          npm install
          npm run build

      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          npm install -g aws-cli
          aws s3 sync Frontend/dist s3://airline-booking-frontend --delete

  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 --decode > ec2_key.pem
          chmod 400 ec2_key.pem
          scp -i ec2_key.pem -r Backend/* $EC2_USER@$EC2_HOST:~/Backend
          ssh -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            cd ~/Backend
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            npm install
            pm2 restart all || pm2 start app.js
          EOF
